import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'
import { useEffect, useState } from 'react'
import Slider from '../components/homeslider'
import styles from '../styles/Home.module.css'
import axios from 'axios'
import "owl.carousel/dist/assets/owl.carousel.css";
import "owl.carousel/dist/assets/owl.theme.default.css";
import dynamic from 'next/dynamic';
import Product from '../components/product'


var $ = require("jquery");
if (typeof window !== "undefined") {
  window.$ = window.jQuery = require("jquery");
}
const OwlCarousel = dynamic(() => import("react-owl-carousel"), {
  ssr: false,
});

export async function getStaticProps() {
  const res = await axios.get(`${process.env.NEXT_PUBLIC_HOST}homeOffers/`);
  const data = res.data;
  const res1 = await axios.get(`${process.env.NEXT_PUBLIC_HOST}sliderOffers/`);
  const data1 = res1.data;
  const res2 = await axios.get(`${process.env.NEXT_PUBLIC_HOST}homeProds/`);
  const data2 = res2.data;


  return {
    props: {
      data,
      data1,
      data2,
    },
  };
}

export default function Home(props) {
  const [offers, setOffers] = useState([]);
  const [bestseller, setBestseller] = useState([]);
  const [sliderOffers, setSliderOffers] = useState([]);
  useEffect(() => {
    const newData = props.data
    const newData1 = props.data1
    const newData2 = props.data2
    setOffers(newData);
    setSliderOffers(newData1);
    setBestseller(newData2)
  }, [])


  const blockOfferStyle = {
    height: 'auto',
    width: '100%',
  };


  const responsive = {
    0: {
      items: 1,
    },
    768: {
      items: 1
    }
  }


  return (

    <>
      <Head>
        <title>Earthie Fashion</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="row">
        <div className="col-12">
          <div>
            <OwlCarousel
              loop={true}
              autoplay={true}
              responsive={responsive}
              center={true}
              nav={false}
              dots={false}
            >
              {sliderOffers.map((slide) => {
                if (slide.published) {
                  return (
                    <div className="item" key={slide.id}>
                      <Image src={process.env.NEXT_PUBLIC_MEDIA_URL + slide.offerImage} alt={slide.offerName} className="img-fluid" width={window.innerWidth} height={350} />
                    </div>
                  )
                }
              })}

            </OwlCarousel>
          </div>
        </div>
      </div>

      <div className="row mt-2 px-3">

        {offers.map((offer) => {
          if (offer.published) {
            return (
              <div className="col-12 col-lg-6 col-md-6 col-sm-12 p-0 px-1" key={offer.id}>
                <Link href={'new-arrivals'}>
                  <Image src={process.env.NEXT_PUBLIC_MEDIA_URL + offer.offerImage} alt={offer.offerName} width={720} height={720} style={blockOfferStyle} />
                </Link>
              </div>
            )
          }
        })}


      </div>

      <div className="row mt-4">
        <div className="col-12">
          <h4 className={styles.headText + " px-4 mx-4 mb-3"}>Best Sellers</h4>
        </div>
        <div className="col-12">
          <div className="row">
            {bestseller.map((slide) => {
              if (slide.is_published) {
                return (
                  <div key={slide.id} className="col-12 col-lg-3 col-md-4 col-sm-6 my-3 d-flex justify-content-center my-3">
                    <Product productId={slide.id} productName={slide.prodcutName} productPrice={slide.productPrice} productImage={slide.productImage} />
                  </div>
                )
              }
            })}
          </div>
        </div>
      </div>


    </>
  )
}
